plugins {
    id 'application'
    id 'java'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "me.champeau.jmh" version "0.6.6"
}
sourceCompatibility = '17'


repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

// jmh {
//     duplicateClassesStrategy = DuplicatesStrategy.WARN
//     includes = ['parallel.DoublingDemo.*', 'parallel.CustomPoolBenchmark.*']
// }

sourceSets {
    jmh {
        java.srcDirs = ['src/jmh/java']
        resources.srcDirs = ['src/jmh/resources']
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.22'
    jmhImplementation  'org.openjdk.jmh:jmh-core:1.34'
    jmhImplementation  'org.openjdk.jmh:jmh-generator-annprocess:1.34'

    implementation 'io.reactivex.rxjava3:rxjava:3.1.3' 

    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    implementation 'org.junit.jupiter:junit-jupiter:5.8.2'
}

application {
    mainClass = 'ir.darkdeveloper.App'
}

tasks.named('test') {
    useJUnitPlatform()
}

// task jmh(type: JavaExec, dependsOn: jmhClasses) {
//     main = 'org.openjdk.jmh.Main'
//     classpath = sourceSets.jmh.compileClasspath + sourceSets.jmh.runtimeClasspath
// }